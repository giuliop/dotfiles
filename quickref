*** bash ***

    login as different user in same terminal
        su - username

    match previous command
        type ctrl-r then type partial match
        type history then !n where n is the command no

    go to previous directory
        cd -

    find <filename> in current dir or subdirs
        find . -name filename

    copy file from local computer to linode directory
        scp file root@178.79.141.51:directory

    copy file from linode to local computer
        scp gws@178.79.141.51:from_file to_file

    paste text into file (deleting old content) / append text to end of file
        echo 'text' > filename / echo 'text' >> filename

    bash history statistics
        cut -f1 -d" " .bash_history | sort | uniq -c | sort -nr | head -n 30

    ssh tunnel for firefox on linode (ssh on port 443)
        ssh -C2qTnN -D 8080 gws@178.79.141.51 -p 443

    ls in reverse order
        ls -tr

    show mounted devices
        df

    show available updates (ubuntu)
        /usr/lib/update-notifier/apt-check --human-readable

    find and replace recursively
        (mac) find . -type f -name '*.go' -exec sed -i '' 's/emptyText/empty/g' {} +
        (ubuntu) find . -name '*.go' -type f -exec sed -i -e 's/emptyText/empty/g' -- {} +


*** tmux ***

    rename window
        , <new name>

    change window number to num
        :move-window -t num

    move pane to/from another window
        :join-pane -t <target window number>
        :join-pane -s <source window number>

    swap panes -> { or }
    show pane number -> q
    rotate pane layout -> space

    enter copy mode
        ctrl-b [ (then vim movement keys ; q to exit)

*** vim ***
    jump to MAN page
        shift-k

    any word completion
        ctrl-N , ctrl-P

    omnicomplete
        ctrl-X + ctrl-O

    save file when forgot to sudo
        :w !sudo tee %

    yank copied text from register 0 (default)
        "0p (normal mode) / ctrl-r 0 (insert mode)

    copy from clipboard if there are extra blanks
        :set paste (before copying and afterwards :set nopaste )

    go until char 'a' (stop before) / (stop on it)
        ta / fa    |     T and F for backward

    move to next (previous) word like the one under cursor
    * / #

    delete until you find 'word'
        d/word (forward) |  d?word (backward)

    delete trailing whitespaces (all lines)
        :%s/\s\+$//

    alternatives to ESC / backspace / enter
        ctrl-[ / ctrl-h / ctrl-j

    yank in insert mode
        ctrl-r " (remapped to ctrl-y)

    unfreeze if frozen by ctrl-S
        ctrl-Q

    close split
        ctrl-W q (closes current split)
        ctrl-W o (closes all split except current)

    move to next { or } in first column (useful for c files)
        [[
        ]]

*** git ***

    see changes before committing
       git diff --cached

    update last commit with all changes
        git commit --all --amend

    merge issues
        git mergetool

    untrack a file without deleting it (e.g. if added to .gitignore)
        git rm --cached filename

    git add remote and push enabling tracking
        git remote add origin ssh://git@bitbucket.org/gws/xxx.git
        git push --set-upstream origin master

    undo last commit
        git reset --soft HEAD~1

    unstage file
        git reset HEAD <file>


*** golang ***

    build without optmization to enable gdb debugging
        go build -gcflags '-N'

    1 << n == 1 * 2^n


*** emacs ***

    if error installing packages
        M-x package-refresh-contents

    select entire buffer
        C-x h
			/*if ((n = rio_read(&rio, buf, MAXLINE)) != 0) {*/


*** valgrind ***

    compile with -g flag (keep default -O0)

    run with valgrind --leak-check=yes myprog arg1 arg2
